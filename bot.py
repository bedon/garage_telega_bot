import random
import re
import requests
import os
import tempfile
import subprocess
import time
import io
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes

TOKEN = '7736052370:AAEDIWcJAijCvzaoNLtNhKXEla_7orW93Kc'
TOKEN_TEST = '7259399630:AAEAnLGOBk7JkToma9Xh-i8oGoKDUmbGW2o'
INSTAGRAM_LINKS = ["https://www.instagram.com/reel/", "https://www.instagram.com/p/"]
TIKTOK_LINKS = ["https://www.tiktok.com/", "https://vm.tiktok.com/"]

async def god_or_gay(user_name: str) -> str:
    if user_name.lower() == "bogdan":
        return "üëë GOD DETECTED üëë\n" + user_name + "\n"
    else:
        return "üåà " + "GAY DETECTED üí¶" + "\n" + user_name + "\n"

async def randomize_status(user_name: str, chat_id: int) -> str:
    # Initialize chat state if not exists
    if not hasattr(randomize_status, "_chat_states"):
        randomize_status._chat_states = {}
    
    # Initialize state for this chat if not exists
    if chat_id not in randomize_status._chat_states:
        randomize_status._chat_states[chat_id] = {
            "last_user": None,
            "streak": 0
        }
    
    chat_state = randomize_status._chat_states[chat_id]
    
    if user_name == chat_state["last_user"]:
        chat_state["streak"] += 1
    else:
        chat_state["last_user"] = user_name
        chat_state["streak"] = 1

    if chat_state["streak"] >= 3:
        status = "üåà GAY SPAMMER üí¶üí¶üí¶\n"
    else:
        status = random.choice(["üëë NICE GUY üëë\n", "üòé CHILL GUY üö¨\n", "COOL DUDE ü§ò\n", "FUNNY DUDE ü§£\n"])

    return f"{status} {user_name}"

async def handle_instagram(update: Update, message: str, sender_name: str) -> None:
    chat_id = update.message.chat_id
    user_prefix = await randomize_status(sender_name, chat_id)
    
    try:
        # –í–∏–¥–æ–±—É–≤–∞—î–º–æ ID –ø–æ—Å—Ç–∞ –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
        instagram_id = re.search(r'/(?:p|reel)/([^/?]+)', message)
        if not instagram_id:
            # –ù–µ –≤–∞–ª—ñ–¥–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –∞–ª–µ –Ω–µ –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            await update.message.chat.send_message(f"{user_prefix}üì∏ From Instagram\n\n[–ù–µ–≤—ñ—Ä–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è Instagram] {message}")
            return
            
        instagram_id = instagram_id.group(1)
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ HTML —Ñ–æ—Ä–º–∞—Ç—ñ
        instagram_link = f'<a href="{message}">üì∏ From Instagram</a>'
        
        # –ú–ï–¢–û–î 1: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è yt-dlp –¥–ª—è —Å–∫–∞—á—É–≤–∞–Ω–Ω—è –≤—ñ–¥–µ–æ –Ω–∞–ø—Ä—è–º—É (–Ω–∞–π–Ω–∞–¥—ñ–π–Ω—ñ—à–∏–π)
        try:
            # –°–∫–∞—á—É—î–º–æ –≤—ñ–¥–µ–æ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –≤ –ø–∞–º'—è—Ç—å, –±–µ–∑ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ–º—ñ–∂–Ω–æ–≥–æ —Ñ–∞–π–ª—É
            process = subprocess.run(
                ["yt-dlp", "-o", "-", "--format", "best", message],
                capture_output=True,
                check=False  # –î–æ–∑–≤–æ–ª—è—î–º–æ –ø—Ä–æ–¥–æ–≤–∂—É–≤–∞—Ç–∏ –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —î –ø–æ–º–∏–ª–∫–∞
            )
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–∞–Ω—ñ
            if process.stdout and len(process.stdout) > 0:
                video_bytes = io.BytesIO(process.stdout)
                video_bytes.seek(0)
                
                # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–µ–æ —ñ —Ç—ñ–ª—å–∫–∏ –ø–æ—Ç—ñ–º –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                await update.message.chat.send_video(
                    video=video_bytes, 
                    caption=f"{user_prefix}{instagram_link}",
                    parse_mode="HTML"
                )
                await delete_message(update)
                return
            else:
                # –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É, –±–µ–∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
                pass
        except Exception as e:
            # –°–ø—Ä–æ–±—É—î–º–æ —á–µ—Ä–µ–∑ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª, —è–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–ø—Ä—è–º—É
            try:
                temp_dir = tempfile.mkdtemp()
                output_path = os.path.join(temp_dir, f"{instagram_id}.mp4")
                
                process = subprocess.run(
                    ["yt-dlp", "-o", output_path, "--format", "best", message],
                    capture_output=True,
                    text=True,
                    check=False
                )
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ñ–∞–π–ª –±—É–≤ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π
                if os.path.exists(output_path) and os.path.getsize(output_path) > 0:
                    with open(output_path, "rb") as video_file:
                        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–µ–æ —ñ —Ç—ñ–ª—å–∫–∏ –ø–æ—Ç—ñ–º –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                        await update.message.chat.send_video(
                            video=video_file, 
                            caption=f"{user_prefix}{instagram_link}",
                            parse_mode="HTML"
                        )
                        await delete_message(update)
                        # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª –ø—ñ—Å–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
                        os.remove(output_path)
                        return
            except Exception:
                # –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É, –±–µ–∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
                pass

        # –ú–ï–¢–û–î 2: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è instagram-stories-api (–Ω–∞–¥—ñ–π–Ω–∏–π Vercel API)
        try:
            api_url = f"https://instagram-stories-api.vercel.app/api/post?url={message}"
            response = requests.get(api_url, timeout=20)
            
            if response.status_code == 200:
                data = response.json()
                if data.get("error") is None and data.get("media_type") and data.get("download_url"):
                    if data.get("media_type") == "video":
                        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–µ–æ —ñ —Ç—ñ–ª—å–∫–∏ –ø–æ—Ç—ñ–º –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                        await update.message.chat.send_video(
                            video=data["download_url"], 
                            caption=f"{user_prefix}{instagram_link}",
                            parse_mode="HTML"
                        )
                        await delete_message(update)
                        return
                    elif data.get("media_type") == "image":
                        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ç–æ —ñ —Ç—ñ–ª—å–∫–∏ –ø–æ—Ç—ñ–º –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                        await update.message.chat.send_photo(
                            photo=data["download_url"], 
                            caption=f"{user_prefix}{instagram_link}",
                            parse_mode="HTML"
                        )
                        await delete_message(update)
                        return
        except Exception:
            # –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É, –±–µ–∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
            pass

        # –ú–ï–¢–û–î 3: –ü—Ä–æ–±–∞ —Ñ–µ—Ç—á—É –∑ direct —ñ–Ω—Å—Ç–∞–≥—Ä–∞–º URL (–æ—Å—Ç–∞–Ω–Ω—ñ–π –º–µ—Ç–æ–¥, –∑–∞–∑–≤–∏—á–∞–π –ø—Ä–∞—Ü—é—î)
        try:
            # –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ª—ñ–Ω–∫ –ø—Ä—è–º–æ –∑ —Å—Ç–æ—Äi–Ω–∫–∏ Instagram
            headers = {
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36",
                "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
                "Accept-Language": "en-US,en;q=0.5",
                "Connection": "keep-alive",
                "Upgrade-Insecure-Requests": "1",
                "Cache-Control": "max-age=0"
            }
            
            response = requests.get(message, headers=headers, timeout=15)
            # –ü–æ—à—É–∫ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤–∏—Ä–∞–∑—É
            video_pattern = r'video_url":"([^"]+)"'
            image_pattern = r'display_url":"([^"]+)"'
            
            video_match = re.search(video_pattern, response.text)
            if video_match:
                video_url = video_match.group(1).replace("\\u0026", "&")
                # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–µ–æ —ñ —Ç—ñ–ª—å–∫–∏ –ø–æ—Ç—ñ–º –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                await update.message.chat.send_video(
                    video=video_url, 
                    caption=f"{user_prefix}{instagram_link}",
                    parse_mode="HTML"
                )
                await delete_message(update)
                return
            
            image_match = re.search(image_pattern, response.text)
            if image_match:
                image_url = image_match.group(1).replace("\\u0026", "&")
                # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ç–æ —ñ —Ç—ñ–ª—å–∫–∏ –ø–æ—Ç—ñ–º –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                await update.message.chat.send_photo(
                    photo=image_url, 
                    caption=f"{user_prefix}{instagram_link}",
                    parse_mode="HTML"
                )
                await delete_message(update)
                return
        except Exception:
            # –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –¥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É, –±–µ–∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
            pass

        # –û–°–¢–ê–ù–ù–Ü–ô –†–ï–ó–ï–†–í–ù–ò–ô –í–ê–†–Ü–ê–ù–¢: –ù–∞–¥–∞—î–º–æ –∫–æ—Ä–∏—Å–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è —Å–∫–∞—á—É–≤–∞–Ω–Ω—è
        # –ù–µ –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –æ—Å–∫—ñ–ª—å–∫–∏ –º–∏ –Ω–µ –∑–º–æ–≥–ª–∏ —Å–∫–∞—á–∞—Ç–∏ –≤—ñ–¥–µ–æ
        await update.message.chat.send_message(
            f"{user_prefix}{instagram_link}\n\n"
            f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∫–∞—á–∞—Ç–∏ –≤—ñ–¥–µ–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —Ü—ñ —Å–µ—Ä–≤—ñ—Å–∏:\n\n"
            f"1. https://saveinsta.app/instagram-video-downloader/{instagram_id}\n"
            f"2. https://www.y2mate.com/instagram/{instagram_id}\n"
            f"3. https://sssinstagram.com/\n\n"
            f"–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: {message}",
            parse_mode="HTML"
        )
            
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ Instagram –≤—ñ–¥–µ–æ: {e}")
        # –ù–µ –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –æ—Å–∫—ñ–ª—å–∫–∏ —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞
        await update.message.chat.send_message(
            f"{user_prefix}<a href='{message}'>üì∏ From Instagram</a>\n\n"
            f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –≤—ñ–¥–µ–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ —Å–∫–∞—á–∞—Ç–∏ —á–µ—Ä–µ–∑:\n\n"
            f"1. https://saveinsta.app/\n"
            f"2. https://instadownloader.co/\n\n"
            f"–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: {message}",
            parse_mode="HTML"
        )

async def handle_tiktok(update: Update, message: str, sender_name: str) -> None:
    chat_id = update.message.chat_id
    user_prefix = await randomize_status(sender_name, chat_id)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ HTML —Ñ–æ—Ä–º–∞—Ç—ñ
    tiktok_link = f'<a href="{message}">üéµ From TikTok</a>'

    try:
        api_url = "https://tikwm.com/api/"
        params = {"url": message}
        response = requests.get(api_url, params=params, timeout=10)
        data = response.json()

        if data.get("code") == 0 and data.get("data", {}).get("play"):
            video_url = data["data"]["play"]
            await update.message.chat.send_video(
                video=video_url, 
                caption=f"{user_prefix}{tiktok_link}",
                parse_mode="HTML"
            )
            await delete_message(update)
            return
        else:
            # –°–ø—Ä–æ–±—É—î–º–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π API
            try:
                api_url = "https://api.tiktokdownload.com/api"
                params = {"url": message}
                response = requests.get(api_url, params=params, timeout=15)
                data = response.json()
                
                if data.get("success") and data.get("video_url"):
                    await update.message.chat.send_video(
                        video=data["video_url"], 
                        caption=f"{user_prefix}{tiktok_link}",
                        parse_mode="HTML"
                    )
                    await delete_message(update)
                    return
            except Exception:
                # –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ, –±–µ–∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
                pass
                
            # –Ø–∫—â–æ –æ–±–∏–¥–≤–∞ API –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–µ–∑ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
            await update.message.chat.send_message(
                f"{user_prefix}{tiktok_link}\n\n[–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–µ–æ]",
                parse_mode="HTML"
            )

    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ TikTok –≤—ñ–¥–µ–æ: {e}")
        await update.message.chat.send_message(
            f"{user_prefix}{tiktok_link}\n\n[–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –≤—ñ–¥–µ–æ]",
            parse_mode="HTML"
        )

async def delete_message(update: Update) -> None:
    try:
        await update.message.delete()
    except Exception as e:
        print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

async def handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message is None or update.message.text is None:
        return

    message = update.message.text
    sender_name = update.message.from_user.full_name

    try:
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Instagram –ø–æ—Å–∏–ª–∞–Ω—å
        if any(link in message for link in INSTAGRAM_LINKS):
            await handle_instagram(update, message, sender_name)
            return

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ TikTok –ø–æ—Å–∏–ª–∞–Ω—å
        if any(link in message for link in TIKTOK_LINKS):
            await handle_tiktok(update, message, sender_name)
            return

    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handler))
    app.run_polling()

if __name__ == '__main__':
    main()